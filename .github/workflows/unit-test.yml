name: ci-test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::608569176201:role/Upload-Docker-Image-toECR
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Query ECR for Latest Image Tag
      id: get-latest-tag
      env:
        ECR_REPO: simple-flask
      run: |
        # Use AWS CLI or SDK to query ECR and get the latest image tag
        latest_tag=$(aws ecr list-images --repository-name $ECR_REPO --query 'imageIds[].imageTag' --output text | sort -V | tail -n 1)
        echo "::set-output name=latest_tag::$latest_tag"

    - name: Increment Tag
      id: increment-tag
      run: |
        latest_tag=${{ steps.get-latest-tag.outputs.latest_tag }}
        IFS='.' read -ra version_parts <<< "$latest_tag"
        major=${version_parts[0]}
        minor=${version_parts[1]}
        ((minor++))
        incremented_tag="$major.$minor"

        echo "::set-output name=incremented_tag::$incremented_tag"

    - name: Build, tag, and Push Docker image to ECR
      env:
        IMAGE_TAG: ${{ steps.increment-tag.outputs.incremented_tag }}
      run: |
        docker build -t $ECR_REPO:$IMAGE_TAG .
        docker tag $ECR_REPO:$IMAGE_TAG
        docker push $ECR_REPO:$IMAGE_TAG